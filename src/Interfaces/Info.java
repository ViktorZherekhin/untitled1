package Interfaces;

public interface Info {
    public void showInfo();   // здесь задали и задаем только сигнатуру метода
                                // т.е. что должно быть реализовано, но не как д.б. реализовано
}


/*
    Интерфес не задает реализацию - он задает каркас.
    Поэтому у не может быть тела метода, а только сигнатура
    Реализация метода showInfo() у классов "Animal" и "Person"
    будет разной, т.к. у них разные поля (String VS int)
    Т.е. один и тот же интерфейс могут реализовывать разные классы
    При этом у каждого будет своя специфика.
    Это полезно, например, когда у нас два класса, которые отвечают
    за доступ к данным (создание, чтение, обновление, удаление).
    Только у одного используется Postgresql, а у другого MongoDB.
    Какая будет использоваться - будет решаться на уровне бизнес-логики, но
    там не должно это волновать, т.к. в обоих случаях работа будет осуществляться
    через интерфейс с одними и теми же названиями методов: "чтение данных",
    "обновление данных", и т.д.

 */