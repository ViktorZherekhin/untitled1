package AbstractClass;

public abstract class AnimalAbs {   // класс сделали абстрактным, т.к. создавать объект на базе "Животное"
                                    // не имеет смысла. Этим мы запретили возможность создавать подобные объекты
                                    // т.е. этот класс - концепция, а сушностями могут являться только
                                    // наследники (мышка, корова, и т.д.)
                                    // Абстрактные классы используются, когда мы хотим создать
                                    // иерархию классов, но класс-родитель не является самостоятельным классом
                                    // т.е. от него ОБЯЗАТЕЛЬНО нужно унаследоваться и реализовать
                                    // абстрактные методы (если они есть)
                                    // Только в абстрактных классах мы можм создавать абстрактыне методы
    public void eat(){                          // этими методами мы говорим, что
        System.out.println("I'm eating...");    // все наши животные будут есть одинаково
    }                                           // но все будут издавать разные звуки

    public abstract void makingSound();  // абстрактный метод

    // Разница между Абстрактным классом и Интерфейсом
    // Они используются в разных случаях
    // Итерфейс - это контракт, это то, что класс умеет делать
    // А абстрактный класс - это то, чем он является.
}
